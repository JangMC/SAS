%let path=/home/meredithjang20170/my_courses/Jang/411/Moneyball;
%let name = orion;
%let lib = &NAME..;

libname &NAME. "&path";

%let INFILE=orion.moneyball;

*Explore full dataset;
data EDA; set &INFILE.;
run;

proc contents; 
run;

proc print data = EDA (obs=10);
run;

** Sorting - Lowest wins;
* proc sort data=EDA; 
* by TARGET_WINS;
 *  proc print data=EDA (obs=15);

** Sorting - highest wins;
* proc sort data=EDA; 
* by descending TARGET_WINS;
*   proc print data=EDA (obs=15);

* proc sort data=EDA; 
* by descending INDEX;
*   proc print data=EDA (obs=15);


proc means data=EDA N NMISS MIN p1 MEAN MEDIAN p99 MAX std;
Title color ='red' 'EDA for Missing Values';
run;



ods graphics on;
proc ttest data=EDA;
Title color ='red' 'EDA';
var TARGET_WINS;
run;
ods graphics off;

** SCATTERPLOTS Look for outliers and influential points;
proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_BATTING_H / loess reg;
title "TARGET_WINS WITH TEAM_BATTING_H Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_BATTING_2B / loess reg;
title "TARGET_WINS WITH TEAM_BATTING_2B Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_BATTING_3B / loess reg;
title "TARGET_WINS WITH TEAM_BATTING_3B Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_BATTING_HR / loess reg;
title "TARGET_WINS WITH TEAM_BATTING_HR Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_BATTING_BB / loess reg;
title "TARGET_WINS WITH TEAM_BATTING_BB Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_BATTING_SO / loess reg;
title "TARGET_WINS WITH IMP_TEAM_BATTING_SO Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_BASERUN_SB / loess reg;
title "TARGET_WINS WITH TEAM_BASERUN_SB Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_BASERUN_CS / loess reg;
title "TARGET_WINS WITH TEAM_BASERUN_CS Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_PITCHING_H / loess reg;
title "TARGET_WINS WITH TEAM_PITCHING_H Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_PITCHING_HR/ loess reg;
title "TARGET_WINS WITH TEAM_PITCHING_HR Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_PITCHING_BB / loess reg;
title "TARGET_WINS WITH TEAM_PITCHING_BB Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_PITCHING_SO / loess reg;
title "TARGET_WINS WITH TEAM_PITCHING_SO Scatter with Loess and Regression";
run;

proc sgscatter data=EDA;
compare Y=TARGET_WINS X=TEAM_FIELDING_E / loess reg;
title "TARGET_WINS WITH TEAM_FIELDING_E Scatter with Loess and Regression";
run;

proc sgscatter data=eda;
compare Y=TARGET_WINS X=TEAM_FIELDING_DP / loess reg;
title "TARGET_WINS WITH TEAM_FIELDING_DP Scatter with Loess and Regression";
run;			


** HISTOGRAMS AND BOXPLOTS FOR ADDITIONAL INFO - outliers;
ods graphics on;
proc ttest data=EDA;
Title color ='red' 'EDA';
var 	TEAM_BATTING_H
	 	TEAM_BATTING_2B
		TEAM_BATTING_3B
		TEAM_BATTING_HR
		TEAM_BATTING_BB
		TEAM_BATTING_SO
		TEAM_BASERUN_SB
		TEAM_BASERUN_CS
		TEAM_PITCHING_H
		TEAM_PITCHING_HR
		TEAM_PITCHING_BB
		TEAM_PITCHING_SO
		TEAM_FIELDING_E
		TEAM_FIELDING_DP;
run;
ods graphics off;

** CORRELATIONS WITH WINS;
Title color ='red' 'Correlations with TARGET_WINS';
proc corr data = EDA;
var TARGET_WINS;
with 	TEAM_BATTING_H
	TEAM_BATTING_2B
	TEAM_BATTING_3B
	TEAM_BATTING_HR
	TEAM_BATTING_BB
	TEAM_BATTING_SO
	TEAM_BASERUN_SB
	TEAM_BASERUN_CS
	TEAM_PITCHING_H
	TEAM_PITCHING_HR
	TEAM_PITCHING_BB
	TEAM_PITCHING_SO
	TEAM_FIELDING_E
	TEAM_FIELDING_DP
	;

run;


data CORR; set &INFILE;
keep 	TARGET_WINS
		TEAM_BATTING_H
	 	TEAM_BATTING_2B
		TEAM_BATTING_3B
		TEAM_BATTING_HR
		TEAM_BATTING_BB
		TEAM_BATTING_SO
		TEAM_BASERUN_SB
	;
run;

ods graphics on;
Title color ='red' 'Correlations with Half of the Variables';
proc corr data=CORR plot=matrix(histogram nvar=all) plots(maxpoints=NONE); 
run;
ods graphics off;

data CORR2; set &INFILE;
keep 	TARGET_WINS
		TEAM_BASERUN_CS
		TEAM_PITCHING_H
		TEAM_PITCHING_HR
		TEAM_PITCHING_BB
		TEAM_PITCHING_SO
		TEAM_FIELDING_E
		TEAM_FIELDING_DP
	;
run;

ods graphics on;
Title color ='red' 'Correlations with Other Half of the Variables';
proc corr data=CORR2 plot=matrix(histogram nvar=all) plots(maxpoints=NONE); 
run;
ods graphics off;

data CORR3; set &INFILE;
keep 	TARGET_WINS
		TEAM_BATTING_H
		TEAM_PITCHING_H
		TEAM_BATTING_BB
		TEAM_PITCHING_BB
		TEAM_BATTING_HR
		TEAM_PITCHING_HR
		TEAM_BATTING_SO
		TEAM_PITCHING_SO
		TEAM_BATTING_BB
		TEAM_BATTING_HBP
	;
run;


ods graphics on;
Title color ='red' 'Correlations with Select Variables with Suspected Relationships';
proc corr data=CORR3 plot=matrix(histogram nvar=all) plots(maxpoints=NONE); 
run;
ods graphics off;


***GET VALUES BY GAME TO COMPARE TO ONLINE DATA;
data PERGAME; set &INFILE;
  TEAM_BATTING_H_PER_GAME = TEAM_BATTING_H / 162;
  TEAM_BATTING_2B_PER_GAME = TEAM_BATTING_2B / 162;
  TEAM_BATTING_3B_PER_GAME = TEAM_BATTING_3B /162;
  TEAM_BATTING_HR_PER_GAME = TEAM_BATTING_HR /162;
  TEAM_BATTING_BB_PER_GAME = TEAM_BATTING_BB / 162;
  TEAM_BATTING_SO_PER_GAME  = TEAM_BATTING_SO / 162;
  TEAM_BASERUN_SB_PER_GAME  = TEAM_BASERUN_SB/ 162;
  TEAM_BASERUN_CS_PER_GAME  = TEAM_BASERUN_CS / 162;
  TEAM_PITCHING_SO_PER_GAME = TEAM_PITCHING_SO /162;
  TEAM_FIELDING_E_PER_GAME = TEAM_FIELDING_E / 162;
  TEAM_PITCHING_BB_PER_GAME = TEAM_PITCHING_BB / 162;
  TEAM_PITCHING_H_PER_GAME = TEAM_PITCHING_H / 162;
  TEAM_PITCHING_HR_PER_GAME = TEAM_PITCHING_HR / 162;
  TEAM_FIELDING_DP_PER_GAME = TEAM_FIELDING_DP /162;
RUN;

PROC CONTENTS DATA=PERGAME;
RUN;



****ADD LABELS TO PERGAME VARIABLES;
data PERGAME2; set PERGAME;
  LABEL   TEAM_BATTING_H_PER_GAME  ="Average base hits by batters per game"
          TEAM_BATTING_2B_PER_GAME  ="Average doubles by batters per game"
          TEAM_BATTING_3B_PER_GAME  ="Average Triples by batters per game"
          TEAM_BATTING_HR_PER_GAME  ="Average Homeruns by batters per game"
          TEAM_BATTING_BB_PER_GAME  ="Average Walks by batters per game"
          TEAM_BATTING_SO_PER_GAME  ="Average Strikeouts by batters per game"
          TEAM_BASERUN_SB_PER_GAME = "Average Stolen bases by batters per game"
          TEAM_FIELDING_E_PER_GAME = "Average errors per game"
          TEAM_FIELDING_DP_PER_GAME = "Average Double plays per game"
          ;
RUN;


PROC CONTENTS DATA=PERGAME2;
RUN;

** HISTOGRAMS TO COMPARE TO ONLINE DATA;
proc univariate data=PERGAME2 noprint;
Title color ='red' 'Game Average';
histogram 	TEAM_BATTING_H_PER_GAME 
	 	TEAM_BATTING_2B_PER_GAME 
	 	TEAM_BATTING_3B_PER_GAME 
		TEAM_BATTING_HR_PER_GAME 
		TEAM_BATTING_BB_PER_GAME 
		TEAM_BATTING_SO_PER_GAME  
		TEAM_BASERUN_SB_PER_GAME 
		TEAM_BASERUN_CS_PER_GAME 
		TEAM_PITCHING_SO_PER_GAME 
		TEAM_FIELDING_E_PER_GAME 
		TEAM_PITCHING_BB_PER_GAME 
		TEAM_PITCHING_H_PER_GAME 
		TEAM_PITCHING_HR_PER_GAME 
		TEAM_FIELDING_DP_PER_GAME
		;
run; 

**********************************
**********************************
****FIX MISSING VALUES WITH MEDIAN;
data DATAPREP; 
set &INFILE.;

IMP_TEAM_BATTING_SO = TEAM_BATTING_SO;
M_TEAM_BATTING_SO =0;
if missing(TEAM_BATTING_SO) then do
	IMP_TEAM_BATTING_SO = 750;
	M_TEAM_BATTING_SO=1;
end;
drop TEAM_BATTING_SO;

IMP_TEAM_BASERUN_SB = TEAM_BASERUN_SB;
M_TEAM_BASERUN_SB=0;
if missing(TEAM_BASERUN_SB) then do
	IMP_TEAM_BASERUN_SB= 101;
	M_TEAM_BASERUN_SB=1;
end;
drop TEAM_BASERUN_SB;

IMP_TEAM_BASERUN_CS = TEAM_BASERUN_CS;
M_TEAM_BASERUN_CS=0;
if missing(TEAM_BASERUN_CS) then do
	IMP_TEAM_BASERUN_CS= 49;
	M_TEAM_BASERUN_CS=1;
end;
drop TEAM_BASERUN_CS;


IMP_TEAM_PITCHING_SO = TEAM_PITCHING_SO;
M_TEAM_PITCHING_SO=0;
if missing(TEAM_PITCHING_SO) then do
	IMP_TEAM_PITCHING_SO= 813.5;
	M_TEAM_PITCHING_SO=1;
end;
drop TEAM_PITCHING_SO;

IMP_TEAM_FIELDING_DP = TEAM_FIELDING_DP;
M_TEAM_FIELDING_DP=0;
if missing(TEAM_FIELDING_DP) then do
	IMP_TEAM_FIELDING_DP= 149;
	M_TEAM_FIELDING_DP=1;
end;
drop TEAM_FIELDING_DP;

Drop TEAM_BATTING_HBP;
run;


**Confirm that no missing values remain;
Title color ='red' 'ENSURE NO MISSING VALUES REMAIN';
proc means data=DATAPREP NMISS;
run;


****ADD LABELS TO IMPUTED VARIABLES AND FLAGS;
data DATAPREP2; 
set DATAPREP;
  LABEL   IMP_TEAM_BATTING_SO  ="Strikeouts by batter - imputed"
          M_TEAM_BATTING_SO  ="Strikeouts by batter - flag"
          IMP_TEAM_BASERUN_SB  ="Stolen Bases - imputed"
          M_TEAM_BASERUN_SB  ="Stolen Bases - flag"
          IMP_TEAM_BASERUN_CS  ="Caught Stealing - imputed"
          M_TEAM_BASERUN_CS  ="Caught Stealing - flag"
          IMP_TEAM_PITCHING_SO = "Strikeouts by Pitcher-imputed"
          M_TEAM_PITCHING_SO = "Strikeouts by Pitcher-flag"
          IMP_TEAM_FIELDING_DP = "Double Plays - imputed"
          M_TEAM_FIELDING_DP = "Double Plays - flag"
          ;
RUN;

*ENSURE LABELS HAVE BEEN ADDED;
*Title color ='red' 'WITH LABELS';
*proc contents; 
*run;

*proc print data = DATAPREP2 (obs=10);
*run;


** REMOVE INFLUENTIAL DATAPOINT;
data DATAPREP3; set DATAPREP2;
if INDEX = 1347 then delete;
run;

**RUN BASE MODEL ;
Title color ='red' 'BASE MODEL WITH FLAGS';
proc reg data = DATAPREP2 outest =base;
model TARGET_WINS = 	TEAM_BATTING_H
						TEAM_BATTING_2B
						TEAM_BATTING_3B
						TEAM_BATTING_HR
						TEAM_BATTING_BB
						IMP_TEAM_BATTING_SO
						M_TEAM_BATTING_SO  
						IMP_TEAM_BASERUN_SB
						M_TEAM_BASERUN_SB 
			          IMP_TEAM_BASERUN_CS  
			          M_TEAM_BASERUN_CS 
			          TEAM_PITCHING_H
			          TEAM_PITCHING_HR
			          TEAM_PITCHING_BB
			          IMP_TEAM_PITCHING_SO 
			          M_TEAM_PITCHING_SO 
			          TEAM_FIELDING_E
			          IMP_TEAM_FIELDING_DP 
			          M_TEAM_FIELDING_DP
						/VIF AIC BIC CP SBC MSE;
run;
quit;

Title color ='red' 'BASE MODEL WITHOUT FLAGS';
proc reg data = DATAPREP2 outest =base2;
model TARGET_WINS = 	TEAM_BATTING_H
						TEAM_BATTING_2B
						TEAM_BATTING_3B
						TEAM_BATTING_HR
						TEAM_BATTING_BB
						IMP_TEAM_BATTING_SO
						IMP_TEAM_BASERUN_SB
			          IMP_TEAM_BASERUN_CS 
			          TEAM_PITCHING_H
			          TEAM_PITCHING_HR
			          TEAM_PITCHING_BB
			          IMP_TEAM_PITCHING_SO 
			         TEAM_FIELDING_E
			          IMP_TEAM_FIELDING_DP 
			          /VIF AIC BIC CP SBC MSE;
run;
quit;



** CAP OUTLIERS;
data DATAPREP4; set DATAPREP3;

CAP_TEAM_BATTING_H = TEAM_BATTING_H;
	if TEAM_BATTING_H <1.00 then CAP_TEAM_BATTING_H = 1188.00;
	if TEAM_BATTING_H >1950.00 then CAP_TEAM_BATTING_H = 1950.00;

CAP_TEAM_BATTING_HR = TEAM_BATTING_HR;
	if TEAM_BATTING_HR <1.00 then CAP_TEAM_BATTING_HR = 4.00;

CAP_TEAM_BATTING_2B = TEAM_BATTING_2B;
	if TEAM_BATTING_2B < 100.00 then CAP_TEAM_BATTING_2B = 100.00;
	if TEAM_BATTING_2B >400.00 then CAP_TEAM_BATTING_2B = 400.00;

CAP_TEAM_BATTING_3B = TEAM_BATTING_3B;
	if TEAM_BATTING_3B < 1.00 then CAP_TEAM_BATTING_3B = 17.00;

CAP_TEAM_BATTING_BB = TEAM_BATTING_BB;
	if TEAM_BATTING_BB < 1.00 then CAP_TEAM_BATTING_BB = 79.00;
	if TEAM_BATTING_BB >755.00 then CAP_TEAM_BATTING_BB = 755.00;

CAP_IMP_TEAM_BATTING_SO = IMP_TEAM_BATTING_SO;
	if IMP_TEAM_BATTING_SO < 1.00 then CAP_IMP_TEAM_BATTING_SO = 67.00;

CAP_IMP_TEAM_BASERUN_SB = IMP_TEAM_BASERUN_SB;
	if IMP_TEAM_BASERUN_SB < 1.00 then CAP_IMP_TEAM_BASERUN_SB = 23.00;
	if IMP_TEAM_BASERUN_SB >439.00 then CAP_IMP_TEAM_BASERUN_SB = 439.00;

CAP_IMP_TEAM_BASERUN_CS = IMP_TEAM_BASERUN_CS;
	if IMP_TEAM_BASERUN_CS < 1.00 then CAP_IMP_TEAM_BASERUN_CS = 16.00;
	if IMP_TEAM_BASERUN_CS >143.00 then CAP_IMP_TEAM_BASERUN_CS = 143.00;

CAP_TEAM_PITCHING_H = TEAM_PITCHING_H;
	if TEAM_PITCHING_H <1.00 then CAP_TEAM_PITCHING_H = 1244.00;
	if TEAM_PITCHING_H >7093.00 then CAP_TEAM_PITCHING_H = 7093.00;

CAP_TEAM_PITCHING_HR = TEAM_PITCHING_HR;
	if TEAM_PITCHING_HR <1.00 then CAP_TEAM_PITCHING_HR = 8.00;

CAP_TEAM_PITCHING_BB = TEAM_PITCHING_BB;
	if TEAM_PITCHING_BB <1.00 then CAP_TEAM_PITCHING_BB = 237.00;
	if TEAM_PITCHING_BB >924.00 then CAP_TEAM_PITCHING_BB = 924.00;

CAP_IMP_TEAM_PITCHING_SO = IMP_TEAM_PITCHING_SO;
	if IMP_TEAM_PITCHING_SO < 1.00 then CAP_IMP_TEAM_PITCHING_SO = 205.00;
	if IMP_TEAM_PITCHING_SO >1474.00 then CAP_IMP_TEAM_PITCHING_SO = 1474.00;

CAP_TEAM_FIELDING_E = TEAM_FIELDING_E;
	if TEAM_FIELDING_E <1.00 then CAP_TEAM_FIELDING_E = 86.00;
	if TEAM_FIELDING_E >1237.00 then CAP_TEAM_FIELDING_E = 1237.00;
run;

***REVIEW CAPS;
** HISTOGRAMS TO VIEW IMPUTED AND CAPPED VARIABLES;
ods graphics on;
proc ttest data=DATAPREP4;
Title color ='red' 'HISTOGRAMS TO VIEW IMPUTED AND CAPPED VARIABLES';
var 	CAP_TEAM_BATTING_H
	 	CAP_TEAM_BATTING_2B
		CAP_TEAM_BATTING_3B
		CAP_TEAM_BATTING_HR
		CAP_TEAM_BATTING_BB
		CAP_IMP_TEAM_BATTING_SO
		CAP_IMP_TEAM_BASERUN_SB
		CAP_IMP_TEAM_BASERUN_CS
		CAP_TEAM_PITCHING_H 
		CAP_TEAM_PITCHING_HR
		CAP_TEAM_PITCHING_BB
		CAP_IMP_TEAM_PITCHING_SO
		CAP_TEAM_FIELDING_E
		IMP_TEAM_FIELDING_DP;
run;
ods graphics off;


***ENSURE NEW IMPUTED VARIABLES AND FLAGS ARE INCLUDED AND OLD VARIABLES DROPPED;
Title color ='red' 'ENSURE CAP VARIABLES INCLUDED';
proc print data = DATAPREP4 (obs=15);
run;

**Confirm that no missing values remain;
Title color ='red' 'CONFIRM NO MISSING VALUES REMAIN';
proc means data=DATAPREP4 NMISS MEAN MEDIAN; 
run;

***LOG of VARIABLES;
data DATAPREP5; set DATAPREP4;
	LOG_TEAM_PITCHING_H = log(TEAM_PITCHING_H);
	LOG_TEAM_PITCHING_BB = log(TEAM_PITCHING_BB);
	LOG_TEAM_FIELDING_E = log(TEAM_FIELDING_E);
	run;

***ENSURE NEW IMPUTED VARIABLES AND FLAGS ARE INCLUDED AND OLD VARIABLES DROPPED;
Title color ='red' 'ENSURE LOG VARIABLESINCLUDED';
proc print data = DATAPREP5 (obs=15);
run;

**Confirm that no missing values remain;
Title color ='red' 'CONFIRM NO MISSING VALUES REMAIN';
proc means data=DATAPREP5 NMISS MEAN MEDIAN; 
run;


***TRANSFORMATIONS;
data DATAPREP6; set DATAPREP5;
	LOG_CAP_TEAM_BATTING_H = log(CAP_TEAM_BATTING_H);
	LOG_CAP_TEAM_BATTING_3B = log(CAP_TEAM_BATTING_3B);
	SQRT_CAP_TEAM_PITCHING_HR = CAP_TEAM_PITCHING_HR**.5;
	CUBERT_CAP_TEAM_PITCHING_HR = (CAP_TEAM_PITCHING_HR)**(1/3);
	LOG_CAP_IMP_TEAM_BASERUN_SB = log(CAP_IMP_TEAM_BASERUN_SB);
	SQRT_CAP_IMP_TEAM_BASERUN_CS = (IMP_TEAM_BASERUN_CS)**.5;
	CUBERT_CAP_IMP_TEAM_BASERUN_CS = (IMP_TEAM_BASERUN_CS)**(1/3);
	LOG_CAP_IMP_TEAM_BASERUN_CS = log(CAP_IMP_TEAM_BASERUN_CS);
	LOG_CAP_TEAM_PITCHING_H = Log(CAP_TEAM_PITCHING_H);
	RR_CAP_TEAM_PITCHING_H = 1/(CAP_TEAM_PITCHING_H)**.5;
	REC_CAP_TEAM_PITCHING_H = 1/(CAP_TEAM_PITCHING_H);
	RECSQ_CAP_TEAM_PITCHING_H = 1/(CAP_TEAM_PITCHING_H)**2; 
	LOG_CAP_TEAM_BATTING_HR = log(CAP_TEAM_BATTING_HR);
	SQRT_CAP_TEAM_BATTING_HR = CAP_TEAM_BATTING_HR**.5;
	LOG_CAP_TEAM_PITCHING_BB = LOG(CAP_TEAM_PITCHING_BB);
	SQ_CAP_TEAM_BATTING_BB = (CAP_TEAM_BATTING_BB)**2;
	CUBE_CAP_TEAM_BATTING_BB = (CAP_TEAM_BATTING_BB)**3;
	LOG_CAP_IMP_TEAM_PITCHING_SO = LOG(CAP_IMP_TEAM_PITCHING_SO);
	RECRT_CAP_IMP_TEAM_PITCHING_SO = 1/(CAP_IMP_TEAM_PITCHING_SO)**.5;
	LOG_CAP_TEAM_FIELDING_E = log(CAP_TEAM_FIELDING_E);
	RECRT_CAP_TEAM_FIELDING_E = 1/(CAP_TEAM_FIELDING_E)**.5;
	REC_CAP_TEAM_FIELDING_E = 1/CAP_TEAM_FIELDING_E;
	RECSQ_CAP_TEAM_FIELDING_E = 1/(CAP_TEAM_FIELDING_E)**2;
	run; 

** COMPARE DATA OF TRANSFORMED VS. UNTRANSFORMED;
ods graphics on;
proc ttest data=DATAPREP6;
Title color ='red' 'LOG AND CAP LOG';
var		CAP_IMP_TEAM_BASERUN_CS
		SQRT_CAP_IMP_TEAM_BASERUN_CS
		CUBERT_CAP_IMP_TEAM_BASERUN_CS
		LOG_CAP_IMP_TEAM_BASERUN_CS
		CAP_TEAM_PITCHING_H
		RR_CAP_TEAM_PITCHING_H 
		REC_CAP_TEAM_PITCHING_H 
		RECSQ_CAP_TEAM_PITCHING_H 
		CAP_TEAM_FIELDING_E
		LOG_CAP_TEAM_FIELDING_E
		RECRT_CAP_TEAM_FIELDING_E
		REC_CAP_TEAM_FIELDING_E
		RECSQ_CAP_TEAM_FIELDING_E
		CAP_TEAM_BATTING_H 	
		LOG_CAP_TEAM_BATTING_H
		CAP_TEAM_BATTING_2B
		CAP_TEAM_BATTING_BB 
		SQ_CAP_TEAM_BATTING_BB 
		CUBE_CAP_TEAM_BATTING_BB
		CAP_TEAM_PITCHING_HR
		SQRT_CAP_TEAM_PITCHING_HR 
		CUBERT_CAP_TEAM_PITCHING_HR
		CAP_TEAM_BATTING_HR
		SQRT_CAP_TEAM_BATTING_HR
		LOG_CAP_TEAM_BATTING_HR
		CAP_TEAM_BATTING_3B
		LOG_CAP_TEAM_BATTING_3B
		CAP_IMP_TEAM_BASERUN_SB
		LOG_CAP_IMP_TEAM_BASERUN_SB
		CAP_TEAM_PITCHING_BB
		CAP_IMP_TEAM_BATTING_SO
		IMP_TEAM_FIELDING_DP
		CAP_IMP_TEAM_PITCHING_SO
		LOG_CAP_IMP_TEAM_PITCHING_SO
		RECRT_CAP_IMP_TEAM_PITCHING_SO
		CAP_TEAM_FIELDING_E
		LOG_CAP_TEAM_FIELDING_E
		RECRT_CAP_TEAM_FIELDING_E;
	run;
ods graphics off;

***ENSURE NEW IMPUTED VARIABLES AND FLAGS ARE INCLUDED AND OLD VARIABLES DROPPED;
Title color ='red' 'ENSURE LOG CAP VARIABLES INCLUDED';
proc print data = DATAPREP6 (obs=15);
run;

**Confirm that no missing values remain;
Title color ='red' 'CONFIRM NO MISSING VALUES REMAIN';
proc means data=DATAPREP6 NMISS MEAN MEDIAN; 
run;

data DATAPREP7; 
set DATAPREP6;
  LABEL   LOG_CAP_TEAM_PITCHING_H  ="Hits allowed - cap and log"
  			LOG_CAP_TEAM_BATTING_H  ="Base Hits by batters-cap,log"
          LOG_CAP_TEAM_PITCHING_BB  ="Walks allowed - cap and log"
          LOG_CAP_IMP_TEAM_PITCHING_SO  ="Strikeouts by pitchers - cap,log"
          LOG_CAP_TEAM_FIELDING_E  ="Errors - cap and log"
          LOG_CAP_IMP_TEAM_BASERUN_SB  ="Stolen bases - cap and log"
          LOG_CAP_TEAM_BATTING_3B  ="triples by batters - cap and log"
          CAP_TEAM_BATTING_H = "Base hits by batters - capped"
			CAP_TEAM_BATTING_HR = "Homeruns by batters - cap"
			CAP_TEAM_PITCHING_H = "Hits allowed - cap"
			CAP_TEAM_PITCHING_HR = "Homeruns by pitchers - cap"
			CAP_TEAM_BATTING_2B = "Doubles by batters - capped"
			CAP_TEAM_BATTING_3B = "Triples by batters - capped"
			CAP_TEAM_BATTING_BB = "Walks by batters - cap"
			SQ_CAP_TEAM_BATTING_BB = "Walks by batters - cap,square"
			CAP_IMP_TEAM_BASERUN_SB = "Stolen Bases - capped"
			CAP_IMP_TEAM_BATTING_SO = "Strikouts by batters - capped"
			CAP_IMP_TEAM_BASERUN_CS = "Caught Stealing - capped"
			CAP_TEAM_PITCHING_BB = "Walks allowed - cap"
			CUBERT_CAP_IMP_TEAM_BASERUN_CS = "Caught Stealing - cap,cube root"
			CAP_IMP_TEAM_PITCHING_SO = "Strikeouts by picther -cap"
			RECSQ_CAP_TEAM_PITCHING_H = "Hits allowed -cap rec. square"
		    REC_CAP_TEAM_FIELDING_E = "Errors - cap and reciprocal"
		    CAP_TEAM_FIELDING_E = "Errors - capped"
         ;
RUN;

*ENSURE LABELS HAVE BEEN ADDED;
Title color ='red' 'WITH LABELS';
proc contents; 
run;

proc print data = DATAPREP7 (obs=10);
run;

%let VARIABLES = 	M_TEAM_BASERUN_SB
					M_TEAM_BASERUN_CS
					M_TEAM_FIELDING_DP
					M_TEAM_BATTING_SO
					LOG_CAP_TEAM_BATTING_H
					CAP_TEAM_BATTING_2B
					SQ_CAP_TEAM_BATTING_BB 
					CAP_TEAM_PITCHING_HR
					LOG_CAP_TEAM_BATTING_3B
					LOG_CAP_IMP_TEAM_BASERUN_SB
					CAP_TEAM_PITCHING_BB
					CUBERT_CAP_IMP_TEAM_BASERUN_CS
					CAP_IMP_TEAM_BATTING_SO
					IMP_TEAM_FIELDING_DP
					CAP_IMP_TEAM_PITCHING_SO
					RECSQ_CAP_TEAM_PITCHING_H 
					REC_CAP_TEAM_FIELDING_E;

**FORWARD MODEL WITH FLAGS ;
Title color ='red' 'FORWARD MODEL WITH ALL TRANSFORMATIONS';
proc reg data = DATAPREP7 outest=estf1;
model TARGET_WINS = 	&VARIABLES	
					/selection = forward ADJRSQ VIF AIC BIC CP SBC MSE;
run;
quit; 


**Backward MODEL WITH FLAGS ;
Title color ='red' 'BACKWARD MODEL WITH ALL TRANSFORMATIONS';
proc reg data = DATAPREP7 outest = estb1;
model TARGET_WINS = 	&VARIABLES	
						/selection = backward  ADJRSQ VIF AIC BIC CP SBC MSE;
run;
quit;



**Stepwise MODEL WITH FLAGS ;
Title color ='red' 'STEPWISE MODEL WITH ALL TRANSFORMATIONS';
proc reg data = DATAPREP7 outest = ests1;
model TARGET_WINS = 	&VARIABLES	
						/selection = stepwise ADJRSQ VIF AIC BIC CP SBC MSE;
run;
quit;


%let VARIABLES2 = 	M_TEAM_BASERUN_SB
					M_TEAM_BASERUN_CS
					M_TEAM_FIELDING_DP
					M_TEAM_BATTING_SO
					LOG_CAP_TEAM_BATTING_H
					SQ_CAP_TEAM_BATTING_BB 
					CAP_TEAM_PITCHING_HR
					LOG_CAP_TEAM_BATTING_3B
					LOG_CAP_IMP_TEAM_BASERUN_SB
					CUBERT_CAP_IMP_TEAM_BASERUN_CS
					CAP_IMP_TEAM_BATTING_SO
					IMP_TEAM_FIELDING_DP
					CAP_IMP_TEAM_PITCHING_SO
					RECSQ_CAP_TEAM_PITCHING_H 
					REC_CAP_TEAM_FIELDING_E;

**Stepwise MODEL WITH FLAGS ;
Title color ='red' 'STEPWISE MODEL WTIH ALL TRANSFORMATIONS - MANUALLY REVISED';
proc reg data = DATAPREP7  outest = ests2;
model TARGET_WINS = 	&VARIABLES2	
						/selection = stepwise ADJRSQ VIF AIC BIC CP SBC MSE;
run;
quit;




%let VARIABLES3 = CAP_TEAM_BATTING_HR
			CAP_TEAM_PITCHING_HR
			IMP_TEAM_FIELDING_DP
			M_TEAM_BATTING_SO
			M_TEAM_BASERUN_SB
			M_TEAM_BASERUN_CS
			M_TEAM_PITCHING_SO
			M_TEAM_FIELDING_DP
			CAP_TEAM_BATTING_H
			CAP_TEAM_BATTING_2B
			CAP_TEAM_BATTING_BB
			CAP_IMP_TEAM_BATTING_SO
			CAP_IMP_TEAM_BASERUN_CS
			LOG_CAP_TEAM_PITCHING_BB
			LOG_CAP_TEAM_PITCHING_H
			LOG_CAP_IMP_TEAM_PITCHING_SO
			LOG_CAP_TEAM_FIELDING_E
			LOG_CAP_IMP_TEAM_BASERUN_SB
			LOG_CAP_TEAM_BATTING_3B;


**FORWARD MODEL WITH FLAGS ;
Title color ='red' 'FORWARD MODEL WTIH LOG VARIABLES';
proc reg data = DATAPREP7 outest = estfl1;
model TARGET_WINS = 	&VARIABLES3	
						/selection = forward ADJRSQ VIF AIC BIC CP SBC MSE;
run;
quit;


**Backward MODEL WITH FLAGS ;
Title color ='red' 'BACKWARD MODEL WTIH LOG VARIABLES';
proc reg data = DATAPREP7 outest = estbl1;
model TARGET_WINS = 	&VARIABLES3	
						/selection = backward ADJRSQ VIF AIC BIC CP SBC MSE;
run;
quit;

**Stepwise MODEL WITH FLAGS ;
Title color ='red' 'STEPWISE MODEL WTIH LOG VARIABLES';
proc reg data = DATAPREP7 outest = estsl1;
model TARGET_WINS = 	&VARIABLES3	
						/selection = stepwise ADJRSQ VIF AIC BIC CP SBC MSE;
run;
quit;


Title color ='red' 'STEPWISE MODEL WITH LOG VARIABLES - MANUALLY REVISED';
proc reg data = DATAPREP7 outest =estsl2;
model TARGET_WINS = 	CAP_TEAM_BATTING_HR
			CAP_TEAM_PITCHING_HR
			IMP_TEAM_FIELDING_DP
			M_TEAM_BATTING_SO
			M_TEAM_BASERUN_SB
			M_TEAM_BASERUN_CS
			M_TEAM_PITCHING_SO
			M_TEAM_FIELDING_DP
			CAP_TEAM_BATTING_H
			CAP_TEAM_BATTING_2B
			CAP_TEAM_BATTING_BB
			CAP_IMP_TEAM_BATTING_SO
			CAP_IMP_TEAM_BASERUN_CS
			LOG_CAP_TEAM_PITCHING_H
			LOG_CAP_IMP_TEAM_PITCHING_SO
			LOG_CAP_TEAM_FIELDING_E
			LOG_CAP_IMP_TEAM_BASERUN_SB
			LOG_CAP_TEAM_BATTING_3B
						/selection = stepwise VIF ADJRSQ AIC BIC CP SBC MSE;
run;
quit;


Title color ='red' 'STEPWISE MODEL WITH CAPPED VARIABLES';
proc reg data = DATAPREP7 outest =cap1;
model TARGET_WINS = 	IMP_TEAM_FIELDING_DP
						CAP_TEAM_BATTING_H
					 	CAP_TEAM_BATTING_2B
						CAP_TEAM_BATTING_3B
						CAP_TEAM_BATTING_BB
						CAP_IMP_TEAM_BATTING_SO
						CAP_IMP_TEAM_BASERUN_SB
						CAP_IMP_TEAM_BASERUN_CS
						CAP_TEAM_PITCHING_H 
						CAP_TEAM_PITCHING_HR
						CAP_TEAM_PITCHING_BB
						CAP_IMP_TEAM_PITCHING_SO
						CAP_TEAM_FIELDING_E
						M_TEAM_BATTING_SO  
						M_TEAM_BASERUN_SB 
			            M_TEAM_BASERUN_CS
			             M_TEAM_FIELDING_DP
						/selection = stepwise VIF ADJRSQ AIC BIC CP SBC MSE;
run;
quit;

***remove high VIF CAP_TEAM_BATTING_BB CAP_TEAM_FIELDING_E CAP_IMP_TEAM_BATTING_SO CAP_IMP_TEAM_PITCHING_SO CAP_TEAM_BATTING_2B;
Title color ='red' 'MANUALLY ALTERED STEPWISE MODEL WITH CAPPED VARIABLES';
proc reg data = DATAPREP7 outest =cap2;
model TARGET_WINS = 	IMP_TEAM_FIELDING_DP
						CAP_TEAM_BATTING_H
					 	CAP_TEAM_BATTING_3B
						CAP_IMP_TEAM_BASERUN_SB
						CAP_IMP_TEAM_BASERUN_CS
						CAP_TEAM_PITCHING_H 
						CAP_TEAM_PITCHING_HR
						CAP_TEAM_PITCHING_BB
						M_TEAM_BATTING_SO  
						M_TEAM_BASERUN_SB 
			            M_TEAM_BASERUN_CS
			             M_TEAM_FIELDING_DP
						/selection = stepwise VIF ADJRSQ AIC BIC CP SBC MSE;
run;
quit;

Title color ='red' 'STEPWISE MODEL WITH CAPPED VARIABLES - manually altered';
proc reg data = DATAPREP7 outest =cap3;
model TARGET_WINS = 	IMP_TEAM_FIELDING_DP
						CAP_TEAM_BATTING_H
					 	CAP_TEAM_BATTING_2B
						CAP_TEAM_BATTING_3B
							CAP_IMP_TEAM_BASERUN_SB
						CAP_IMP_TEAM_BASERUN_CS
						CAP_TEAM_PITCHING_H 
						CAP_TEAM_PITCHING_HR
						CAP_TEAM_PITCHING_BB
						CAP_IMP_TEAM_PITCHING_SO
						M_TEAM_BATTING_SO  
						M_TEAM_BASERUN_SB 
			            M_TEAM_BASERUN_CS
			             M_TEAM_FIELDING_DP
						/selection = stepwise VIF ADJRSQ AIC BIC CP SBC MSE;
run;
quit;



******COMPARE METRICS OF MODELS;
proc print data=base;
Title color ='red' 'BASE MODEL WTIH FLAGS';

proc print data=base2;
Title color ='red' 'BASE MODEL WTIHOUT FLAGS';

proc print data=estf1;
Title color ='red' 'FORWARD MODEL WTIH FLAGS';

proc print data=estb1;
Title color ='red' 'BACKWARD MODEL WTIH FLAGS';

proc print data=ests1;
Title color ='red' 'STEPWISE MODEL WTIH FLAGS';
 
proc print data=ests2;
Title color ='red' 'STEPWISE MODEL WTIHOUT DOUBLES';

proc print data=estfl1;
Title color ='red' 'FORWARD MODEL WITH ONLY LOG VARIABLES';

proc print data=estbl1;
Title color ='red' 'BACKWARD MODEL WITH ONLY LOG VARIABLES';

proc print data=estsl1;
Title color ='red' 'STEPWISE MODEL WITH ONLY LOG VARIABLES';

proc print data=estsl2;
Title color ='red' 'STEPWISE log MODEL WITHOUT team pitching BB';


proc print data=cap1;
Title color ='red' 'STEPWISE MODEL WITH CAPPED VARIABLES';

proc print data=cap2;
Title color ='red' 'MANUALLY ALTERED STEPWISE MODEL WITH CAPPED VARIABLES';
   run;

******PROC GLM:
Title color ='red' 'PROC GLM';
proc glm data = DATAPREP7;
model TARGET_WINS = 	CAP_TEAM_PITCHING_HR 
			IMP_TEAM_FIELDING_DP 
			M_TEAM_BATTING_SO 
			M_TEAM_BASERUN_SB 
			M_TEAM_BASERUN_CS 
			M_TEAM_FIELDING_DP 
			CAP_TEAM_BATTING_H 
			CAP_TEAM_BATTING_2B 
			CAP_TEAM_BATTING_BB 
			CAP_IMP_TEAM_BATTING_SO 
			LOG_CAP_TEAM_FIELDING_E 
			LOG_CAP_IMP_TEAM_BASERUN_SB 
			LOG_CAP_TEAM_BATTING_3B;
run;
quit;

proc genmod data = DATAPREP7;
model TARGET_WINS = 	CAP_TEAM_PITCHING_HR 
			IMP_TEAM_FIELDING_DP 
			M_TEAM_BATTING_SO 
			M_TEAM_BASERUN_SB 
			M_TEAM_BASERUN_CS 
			M_TEAM_FIELDING_DP 
			CAP_TEAM_BATTING_H 
			CAP_TEAM_BATTING_2B 
			CAP_TEAM_BATTING_BB 
			CAP_IMP_TEAM_BATTING_SO 
			LOG_CAP_TEAM_FIELDING_E 
			LOG_CAP_IMP_TEAM_BASERUN_SB 
			LOG_CAP_TEAM_BATTING_3B;
run;
quit;


**DEPLOY A MODEL;
**Create a standalong data set;

data scorefile;
set orion.moneyball_test;

*proc print data = scorefile (obs=5);
*run;



***COPY MISSING VALUES;
IMP_TEAM_BATTING_SO = TEAM_BATTING_SO;
M_TEAM_BATTING_SO =0;
if missing(TEAM_BATTING_SO) then do
	IMP_TEAM_BATTING_SO = 750;
	M_TEAM_BATTING_SO=1;
end;
drop TEAM_BATTING_SO;

IMP_TEAM_BASERUN_SB = TEAM_BASERUN_SB;
M_TEAM_BASERUN_SB=0;
if missing(TEAM_BASERUN_SB) then do
	IMP_TEAM_BASERUN_SB= 101;
	M_TEAM_BASERUN_SB=1;
end;
drop TEAM_BASERUN_SB;

IMP_TEAM_BASERUN_CS = TEAM_BASERUN_CS;
M_TEAM_BASERUN_CS=0;
if missing(TEAM_BASERUN_CS) then do
	IMP_TEAM_BASERUN_CS= 49;
	M_TEAM_BASERUN_CS=1;
end;
drop TEAM_BASERUN_CS;


IMP_TEAM_PITCHING_SO = TEAM_PITCHING_SO;
M_TEAM_PITCHING_SO=0;
if missing(TEAM_PITCHING_SO) then do
	IMP_TEAM_PITCHING_SO= 813.5;
	M_TEAM_PITCHING_SO=1;
end;
drop TEAM_PITCHING_SO;

IMP_TEAM_FIELDING_DP = TEAM_FIELDING_DP;
M_TEAM_FIELDING_DP=0;
if missing(TEAM_FIELDING_DP) then do
	IMP_TEAM_FIELDING_DP= 149;
	M_TEAM_FIELDING_DP=1;
end;
drop TEAM_FIELDING_DP;

Drop TEAM_BATTING_HBP;



***copy transformations;
	CAP_TEAM_BATTING_H = TEAM_BATTING_H;
	if TEAM_BATTING_H <1.00 then CAP_TEAM_BATTING_H = 1188.00;
	if TEAM_BATTING_H >1950.00 then CAP_TEAM_BATTING_H = 1950.00;

CAP_TEAM_BATTING_HR = TEAM_BATTING_HR;
	if TEAM_BATTING_HR <1.00 then CAP_TEAM_BATTING_HR = 4.00;

CAP_TEAM_BATTING_2B = TEAM_BATTING_2B;
	if TEAM_BATTING_2B < 100.00 then CAP_TEAM_BATTING_2B = 100.00;
	if TEAM_BATTING_2B >400.00 then CAP_TEAM_BATTING_2B = 400.00;

CAP_TEAM_BATTING_3B = TEAM_BATTING_3B;
	if TEAM_BATTING_3B < 1.00 then CAP_TEAM_BATTING_3B = 17.00;

CAP_TEAM_BATTING_BB = TEAM_BATTING_BB;
	if TEAM_BATTING_BB < 1.00 then CAP_TEAM_BATTING_BB = 79.00;
	if TEAM_BATTING_BB >755.00 then CAP_TEAM_BATTING_BB = 755.00;

CAP_IMP_TEAM_BATTING_SO = IMP_TEAM_BATTING_SO;
	if IMP_TEAM_BATTING_SO < 1.00 then CAP_IMP_TEAM_BATTING_SO = 67.00;

CAP_IMP_TEAM_BASERUN_SB = IMP_TEAM_BASERUN_SB;
	if IMP_TEAM_BASERUN_SB < 1.00 then CAP_IMP_TEAM_BASERUN_SB = 23.00;
	if IMP_TEAM_BASERUN_SB >439.00 then CAP_IMP_TEAM_BASERUN_SB = 439.00;

CAP_IMP_TEAM_BASERUN_CS = IMP_TEAM_BASERUN_CS;
	if IMP_TEAM_BASERUN_CS < 1.00 then CAP_IMP_TEAM_BASERUN_CS = 16.00;
	if IMP_TEAM_BASERUN_CS >143.00 then CAP_IMP_TEAM_BASERUN_CS = 143.00;

CAP_TEAM_PITCHING_H = TEAM_PITCHING_H;
	if TEAM_PITCHING_H <1.00 then CAP_TEAM_PITCHING_H = 1244.00;
	if TEAM_PITCHING_H >7093.00 then CAP_TEAM_PITCHING_H = 7093.00;

CAP_TEAM_PITCHING_HR = TEAM_PITCHING_HR;
	if TEAM_PITCHING_HR <1.00 then CAP_TEAM_PITCHING_HR = 8.00;

CAP_TEAM_PITCHING_BB = TEAM_PITCHING_BB;
	if TEAM_PITCHING_BB <1.00 then CAP_TEAM_PITCHING_BB = 237.00;
	if TEAM_PITCHING_BB >924.00 then CAP_TEAM_PITCHING_BB = 924.00;

CAP_IMP_TEAM_PITCHING_SO = IMP_TEAM_PITCHING_SO;
	if IMP_TEAM_PITCHING_SO < 1.00 then CAP_IMP_TEAM_PITCHING_SO = 205.00;
	if IMP_TEAM_PITCHING_SO >1474.00 then CAP_IMP_TEAM_PITCHING_SO = 1474.00;

CAP_TEAM_FIELDING_E = TEAM_FIELDING_E;
	if TEAM_FIELDING_E <1.00 then CAP_TEAM_FIELDING_E = 86.00;
	if TEAM_FIELDING_E >1237.00 then CAP_TEAM_FIELDING_E = 1237.00;


	LOG_CAP_IMP_TEAM_BASERUN_SB = log(CAP_IMP_TEAM_BASERUN_SB);
	LOG_CAP_TEAM_FIELDING_E = log(CAP_TEAM_FIELDING_E);
	LOG_CAP_TEAM_BATTING_3B = log(CAP_TEAM_BATTING_3B);
	


P_TARGET_WINS2 = 
+	84.96857 
+ 	.05152 		* 	CAP_TEAM_PITCHING_HR 
- 	.11606 		* 	IMP_TEAM_FIELDING_DP 
+ 	9.88557 	* 	M_TEAM_BATTING_SO
+ 	27.95811	* 	M_TEAM_BASERUN_SB 
+ 	2.72612	 	* 	M_TEAM_BASERUN_CS 
+ 	7.58139		* 	M_TEAM_FIELDING_DP 
+ 	.04642 		* 	CAP_TEAM_BATTING_H 
- 	.03213 		* 	CAP_TEAM_BATTING_2B 
+ 	.03111 		* 	CAP_TEAM_BATTING_BB
+ 	.01359 		* 	CAP_IMP_TEAM_BATTING_SO
- 	21.39096	* 	LOG_CAP_TEAM_FIELDING_E
+ 	5.17352		* 	LOG_CAP_IMP_TEAM_BASERUN_SB
+ 	6.75913 	* 	LOG_CAP_TEAM_BATTING_3B

;

 

***PUT IN LOGIC TO HAVE SANE ANSWERS based on above info;

if P_TARGET_WINS2 <1 then P_TARGET_WINS2 = 1;
if P_TARGET_WINS2 >162 then P_TARGET_WINS2 = 162;
P_TARGET_WINS = Round(P_TARGET_WINS2);

***ONLY NEED TO TURN IN TWO VALUES FOR ASSIGNMENT;
keep index;
Keep P_TARGET_WINS;

run;

proc print data = scorefile;
run;




***SAVE THE FILE IN MY FOLDER;

libname scorelib "/home/meredithjang20170/my_courses/Jang/411/Moneyball";

data scorelib.MeredithJang_moneyball_FILE;
set scorefile;
run;

proc print data = scorelib.meredithjang_moneyball_file (obs=10);
run;

***Calculate my own errors to doublecheck my model;

data scorefile2;
set orion.moneyball;

***COPY MISSING VALUES;
IMP_TEAM_BATTING_SO = TEAM_BATTING_SO;
M_TEAM_BATTING_SO =0;
if missing(TEAM_BATTING_SO) then do
	IMP_TEAM_BATTING_SO = 750;
	M_TEAM_BATTING_SO=1;
end;
drop TEAM_BATTING_SO;

IMP_TEAM_BASERUN_SB = TEAM_BASERUN_SB;
M_TEAM_BASERUN_SB=0;
if missing(TEAM_BASERUN_SB) then do
	IMP_TEAM_BASERUN_SB= 101;
	M_TEAM_BASERUN_SB=1;
end;
drop TEAM_BASERUN_SB;

IMP_TEAM_BASERUN_CS = TEAM_BASERUN_CS;
M_TEAM_BASERUN_CS=0;
if missing(TEAM_BASERUN_CS) then do
	IMP_TEAM_BASERUN_CS= 49;
	M_TEAM_BASERUN_CS=1;
end;
drop TEAM_BASERUN_CS;


IMP_TEAM_PITCHING_SO = TEAM_PITCHING_SO;
M_TEAM_PITCHING_SO=0;
if missing(TEAM_PITCHING_SO) then do
	IMP_TEAM_PITCHING_SO= 813.5;
	M_TEAM_PITCHING_SO=1;
end;
drop TEAM_PITCHING_SO;

IMP_TEAM_FIELDING_DP = TEAM_FIELDING_DP;
M_TEAM_FIELDING_DP=0;
if missing(TEAM_FIELDING_DP) then do
	IMP_TEAM_FIELDING_DP= 149;
	M_TEAM_FIELDING_DP=1;
end;
drop TEAM_FIELDING_DP;

Drop TEAM_BATTING_HBP;



***copy transformations;
	CAP_TEAM_BATTING_H = TEAM_BATTING_H;
	if TEAM_BATTING_H <1.00 then CAP_TEAM_BATTING_H = 1188.00;
	if TEAM_BATTING_H >1950.00 then CAP_TEAM_BATTING_H = 1950.00;

CAP_TEAM_BATTING_HR = TEAM_BATTING_HR;
	if TEAM_BATTING_HR <1.00 then CAP_TEAM_BATTING_HR = 4.00;

CAP_TEAM_BATTING_2B = TEAM_BATTING_2B;
	if TEAM_BATTING_2B < 100.00 then CAP_TEAM_BATTING_2B = 100.00;
	if TEAM_BATTING_2B >400.00 then CAP_TEAM_BATTING_2B = 400.00;

CAP_TEAM_BATTING_3B = TEAM_BATTING_3B;
	if TEAM_BATTING_3B < 1.00 then CAP_TEAM_BATTING_3B = 17.00;

CAP_TEAM_BATTING_BB = TEAM_BATTING_BB;
	if TEAM_BATTING_BB < 1.00 then CAP_TEAM_BATTING_BB = 79.00;
	if TEAM_BATTING_BB >755.00 then CAP_TEAM_BATTING_BB = 755.00;

CAP_IMP_TEAM_BATTING_SO = IMP_TEAM_BATTING_SO;
	if IMP_TEAM_BATTING_SO < 1.00 then CAP_IMP_TEAM_BATTING_SO = 67.00;

CAP_IMP_TEAM_BASERUN_SB = IMP_TEAM_BASERUN_SB;
	if IMP_TEAM_BASERUN_SB < 1.00 then CAP_IMP_TEAM_BASERUN_SB = 23.00;
	if IMP_TEAM_BASERUN_SB >439.00 then CAP_IMP_TEAM_BASERUN_SB = 439.00;

CAP_IMP_TEAM_BASERUN_CS = IMP_TEAM_BASERUN_CS;
	if IMP_TEAM_BASERUN_CS < 1.00 then CAP_IMP_TEAM_BASERUN_CS = 16.00;
	if IMP_TEAM_BASERUN_CS >143.00 then CAP_IMP_TEAM_BASERUN_CS = 143.00;

CAP_TEAM_PITCHING_H = TEAM_PITCHING_H;
	if TEAM_PITCHING_H <1.00 then CAP_TEAM_PITCHING_H = 1244.00;
	if TEAM_PITCHING_H >7093.00 then CAP_TEAM_PITCHING_H = 7093.00;

CAP_TEAM_PITCHING_HR = TEAM_PITCHING_HR;
	if TEAM_PITCHING_HR <1.00 then CAP_TEAM_PITCHING_HR = 8.00;

CAP_TEAM_PITCHING_BB = TEAM_PITCHING_BB;
	if TEAM_PITCHING_BB <1.00 then CAP_TEAM_PITCHING_BB = 237.00;
	if TEAM_PITCHING_BB >924.00 then CAP_TEAM_PITCHING_BB = 924.00;

CAP_IMP_TEAM_PITCHING_SO = IMP_TEAM_PITCHING_SO;
	if IMP_TEAM_PITCHING_SO < 1.00 then CAP_IMP_TEAM_PITCHING_SO = 205.00;
	if IMP_TEAM_PITCHING_SO >1474.00 then CAP_IMP_TEAM_PITCHING_SO = 1474.00;

CAP_TEAM_FIELDING_E = TEAM_FIELDING_E;
	if TEAM_FIELDING_E <1.00 then CAP_TEAM_FIELDING_E = 86.00;
	if TEAM_FIELDING_E >1237.00 then CAP_TEAM_FIELDING_E = 1237.00;


	LOG_CAP_IMP_TEAM_BASERUN_SB = log(CAP_IMP_TEAM_BASERUN_SB);
	LOG_CAP_TEAM_FIELDING_E = log(CAP_TEAM_FIELDING_E);
	LOG_CAP_TEAM_BATTING_3B = log(CAP_TEAM_BATTING_3B);
	


P_TARGET_WINSS = 
+	84.96857 
+ 	.05152 		* 	CAP_TEAM_PITCHING_HR 
- 	.11606 		* 	IMP_TEAM_FIELDING_DP 
+ 	9.88557 	* 	M_TEAM_BATTING_SO
+ 	27.95811	* 	M_TEAM_BASERUN_SB 
+ 	2.72612	 	* 	M_TEAM_BASERUN_CS 
+ 	7.58139		* 	M_TEAM_FIELDING_DP 
+ 	.04642 		* 	CAP_TEAM_BATTING_H 
- 	.03213 		* 	CAP_TEAM_BATTING_2B 
+ 	.03111 		* 	CAP_TEAM_BATTING_BB
+ 	.01359 		* 	CAP_IMP_TEAM_BATTING_SO
- 	21.39096	* 	LOG_CAP_TEAM_FIELDING_E
+ 	5.17352		* 	LOG_CAP_IMP_TEAM_BASERUN_SB
+ 	6.75913 	* 	LOG_CAP_TEAM_BATTING_3B

;

 

***PUT IN LOGIC TO HAVE SANE ANSWERS based on above info;

if P_TARGET_WINSS <1 then P_TARGET_WINSS = 1;
if P_TARGET_WINSS >162 then P_TARGET_WINSS = 162;
P_TARGET_WINS6 = Round(P_TARGET_WINSS);

***ONLY NEED TO TURN IN TWO VALUES FOR ASSIGNMENT;
keep index;
Keep P_TARGET_WINS6;
Keep Target_WINS

run;

proc print data = scorefile2;
run;






